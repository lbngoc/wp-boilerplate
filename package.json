{
  "name": "sage",
  "version": "8.5.2",
  "author": "Ben Word <ben@benword.com>",
  "homepage": "https://roots.io/sage/",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git://github.com/roots/sage.git"
  },
  "bugs": {
    "url": "https://github.com/roots/sage/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "scripts": {
    "start": "docker-compose up -d && docker-compose ps",
    "setup": "npm run start && docker-compose exec php sh -c '{ [ ! -z $DB_ROOT_PASSWORD ] && echo \"Creating database...\" && mysql -hdb -uroot -p$DB_ROOT_PASSWORD -e \"CREATE DATABASE IF NOT EXISTS \\`$DB_NAME\\`;\"; }; echo \"Installing WordPress version $(wp core version)...\" && wp core install --title=\"$WPSITE_TITLE\" --url=$WPSITE_URL --admin_user=\"$WPSITE_ADMIN_USER\" --admin_password=\"$WPSITE_ADMIN_PASSWORD\" --admin_email=\"$WPSITE_ADMIN_EMAIL\" --skip-email && echo \"wp-content/themes/$WPSITE_THEME_NAME\" >> .gitignore; { [ 1 -eq $(wp user list --field=ID | wc -l) ] && echo \"Creating editor user...\" && wp user create $WPSITE_EDITOR_USER $WPSITE_EDITOR_EMAIL --user_pass=\"$WPSITE_EDITOR_PASSWORD\" --role=editor; }'; npm run activate:theme -s",
    "update:perms": "docker-compose exec php sh -c 'chown 1000 -R . && find . -type d -exec chmod 0755 {} \\; && find . -type f -exec chmod 0644 {} \\; && find . -type d -name uploads -exec chmod 0777 {} \\;'",
    "activate:theme": "docker-compose exec php sh -c 'ln -sfn ../../../src ./wp-content/themes/$WPSITE_THEME_NAME && wp theme activate $WPSITE_THEME_NAME'",
    "update:settings": "docker-compose stop php && docker-compose run --rm php sh -c 'wp option update home http://$WPSITE_URL; wp option update siteurl http://$WPSITE_URL; ln -sfn ../../../src ./wp-content/themes/$WPSITE_THEME_NAME; wp theme activate $WPSITE_THEME_NAME' && npm run start -s",
    "dev": "webpack --watch",
    "build": "webpack --env.production",
    "serve": "npm run start -s && npm run dev -s",
    "ssh": "docker-compose exec php bash",
    "ssh:root": "docker-compose exec -u root php bash",
    "postinstall": "cp -f .env.sample .env; cp -f hosts.yml.sample hosts.yml; echo '=> Setup development dependencies successfully.\nTo continue, open and change your project details in `.env` file then run `npm run setup`'; rm .npmrc"
  },
  "engines": {
    "node": ">= 4.5"
  },
  "devDependencies": {
    "asset-builder": "^1.1.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.2",
    "babel-preset-env": "^1.6.1",
    "browser-sync": "^2.18.13",
    "browser-sync-dev-hot-webpack-plugin": "^0.2.2",
    "caniuse-lite": "^1.0.30000697",
    "clean-webpack-plugin": "^0.1.17",
    "css-loader": "^0.28.7",
    "dotenv": "^5.0.1",
    "extract-text-webpack-plugin": "^3.0.2",
    "file-loader": "^1.1.5",
    "imagemin-webpack-plugin": "^1.5.2",
    "node-sass": "^4.5.3",
    "postcss-cssnext": "^3.0.2",
    "postcss-import": "^11.0.0",
    "postcss-load-config": "^1.2.0",
    "postcss-loader": "^2.0.8",
    "postcss-safe-parser": "^3.0.1",
    "sass-loader": "^6.0.6",
    "script-loader": "^0.7.2",
    "style-loader": "^0.19.0",
    "url-loader": "^0.6.2",
    "webpack": "^3.8.1",
    "webpack-assets-manifest": "^1.0.0",
    "webpack-dev-middleware": "^2.0.0",
    "webpack-hot-middleware": "^2.0.0"
  },
  "dependencies": {
    "bootstrap": "^4.0.0",
    "popper.js": "^1.12.6"
  }
}
