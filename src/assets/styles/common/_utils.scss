/* @link https://bulma.io/documentation/modifiers/syntax/
// Float
  is-clearfix Fixes an element's floating children
  is-pulled-left  Moves an element to the left
  is-pulled-right Moves an element to the right
// Spacing
  is-marginless Removes any margin
  is-paddingless  Removes any padding
// Other
  is-overlay  Completely covers the first positioned parent
  is-clipped  Adds overflow hidden
  is-radiusless Removes any radius
  is-shadowless Removes any shadow
  is-unselectable Prevents the text from being selectable
  is-invisible  Adds visibility hidden
  is-sr-only  Hide elements visually but keep the element available to be announced by a screen reader
*/

/* Box Sizing */
$box_props: ("mar": "margin", "pad": "padding");

@for $i from 0 through 10 {
  @for $j from 0 through 10 {
    @if $i != $j {
      @each $name, $prop in $box_props {
        .#{$name}-v-#{$i}-#{$j} {
          #{$prop}-top: #{$i}rem!important;
          #{$prop}-bottom: #{$j}rem!important;
        }
        .#{$name}-h-#{$i}-#{$j} {
          #{$prop}-left: #{$i}rem!important;
          #{$prop}-right: #{$j}rem!important;
        }
      }
    }
  }
  @each $name, $prop in $box_props {
    .#{$name}-#{$i} {
      #{$prop}: #{$i}rem!important;
    }
    .#{$name}-v-#{$i} {
      #{$prop}-top: #{$i}rem!important;
      #{$prop}-bottom: #{$i}rem!important;
    }
    .#{$name}-h-#{$i} {
      #{$prop}-left: #{$i}rem!important;
      #{$prop}-right: #{$i}rem!important;
    }
    .#{$name}-top-#{$i} {
      #{$prop}-top: #{$i}rem;
      // #{$prop}-top: calc(#{$i}*#{$body-size});
    }
    .#{$name}-bottom-#{$i} {
      #{$prop}-bottom: #{$i}rem;
      // #{$prop}-bottom: #{$i}vw;
    }
    .#{$name}-left-#{$i} {
      #{$prop}-left: #{$i}rem;
      // #{$prop}-left: #{$i}vw;
    }
    .#{$name}-right-#{$i} {
      #{$prop}-right: #{$i}rem;
      // #{$prop}-right: #{$i}vw;
    }
  }
}

$overlays: (
  'light'  : $bg-overlay-light,
  'lighter': $bg-overlay-lighter,
  'lighten': $bg-overlay-lighten,
  'dark'   : $bg-overlay-dark,
  'darker' : $bg-overlay-darker,
  'darken' : $bg-overlay-darken
);

@each $color_name, $color in $overlays {
  .has-overlay-#{$color_name} {
    position: relative;
    &:after {
      content: ' ';
      @extend .is-overlay;
      background-color: $color;
    }
  }
}

.has-background-primary-lighter {
  background-color: $primary-lighter;
}

.has-bg-gradient {
  background-color: $primary;
  background: -moz-linear-gradient(0deg, $primary 0%, #2FBEBD 25%, #57c2b1 50%, #8acb98 75%, #bdd973 100%)!important;
  background: -webkit-linear-gradient(0deg, $primary 0%, #2FBEBD 25%, #57c2b1 50%, #8acb98 75%, #bdd973 100%)!important;
  background: linear-gradien(0deg, $primary 0%, #2FBEBD 25%, #57c2b1 50%, #8acb98 75%, #bdd973 100%)!important;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="$primary",endColorstr="$secondary",GradientType=1);
}

.has-bg-contain {
  background-size: contain;
}

.has-bg-contain-mobile {
  @include mobile {
    background-size: contain!important;
  }
}

.has-bg-cover-desktop {
  @include desktop {
    background-size: cover!important;
  }
}

.has-border-blob {
  border-radius: 49% 51% 40% 60% / 62% 50% 50% 38%;
}

.is-backgroundless {
  background: 0 none!important;
}

.is-center-block {
  @extend .is-inline-block;
  margin: 0 auto;
}

.is-zindexless {
  z-index: 0!important;
}

.is-borderless {
  border: 0 none!important;
}

.equal-height .align_center,
.is-v-center {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.is-dimmed {
  filter: grayscale(100%)!important;
}

@include mobile {
  .is-paddingless-mobile {
    padding: 0!important;
  }
  .is-marginless-mobile {
    margin: 0!important;
  }
  .is-backgroundless-mobile {
    background: 0 none!important;
  }
}

